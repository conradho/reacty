rules:
  no-console: 0
  indent:
    - 2
    - 2
  quotes:
    - 2
    - single
  jsx-quotes:
    - 2
    - prefer-single
  linebreak-style:
    - 2
    - unix
  semi:
    - 2
  no-unused-vars:
    - 2
    - {'vars': 'all', 'varsIgnorePattern': '^React$'}
  strict:
    - 2
    - function
  space-before-blocks:
    - 2
  space-before-function-paren:
    - 2
  brace-style:
    - 2
    - 1tbs
    - { 'allowSingleLine': true }
  comma-dangle:
    - 2
    - always-multiline
  comma-spacing:
    - 2
  array-bracket-spacing:
    - 2
    - always
  camelcase:
    - 2
  ##################################################
  # es6 stuff                                      #
  ##################################################
  no-var: 2
  no-const-assign: 2
  no-class-assign: 2
  object-shorthand: 2
  prefer-arrow-callback: 2
  prefer-const: 0
  prefer-reflect: 2
  prefer-spread: 2
  prefer-template: 2

  ##################################################
  # best practices                                 #
  ##################################################
  block-scoped-var: 2      // treat var statements as if they were block scoped (off by default)
  complexity: 2            // specify the maximum cyclomatic complexity allowed in a program (off by default)
  consistent-return: 2     // require return statements to either always or never specify values
  curly: 2                 // specify curly brace conventions for all control statements
  default-case: 2          // require default case in switch statements (off by default)
  dot-notation: 2          // encourages use of dot notation whenever possible
  eqeqeq: 2                // require the use of === and !==
  guard-for-in: 2          // make sure for-in loops have an if statement (off by default)
  no-alert: 2              // disallow the use of alert confirm and prompt
  no-caller: 2             // disallow use of arguments.caller or arguments.callee
  no-div-regex: 2          // disallow division operators explicitly at beginning of regular expression (off by default)
  no-else-return: 2        // disallow else after a return in an if (off by default)
  no-empty-label: 2        // disallow use of labels for anything other then loops and switches
  no-eq-null: 2            // disallow comparisons to null without a type-checking operator (off by default)
  no-eval: 2               // disallow use of eval()
  no-extend-native: 2      // disallow adding to native types
  no-extra-bind: 2         // disallow unnecessary function binding
  no-fallthrough: 2        // disallow fallthrough of case statements
  no-floating-decimal: 2   // disallow the use of leading or trailing decimal points in numeric literals (off by default)
  no-implied-eval: 2       // disallow use of eval()-like methods
  no-iterator: 2           // disallow usage of __iterator__ property
  no-labels: 2             // disallow use of labeled statements
  no-lone-blocks: 2        // disallow unnecessary nested blocks
  no-loop-func: 2          // disallow creation of functions within loops
  no-multi-spaces: 2       // disallow use of multiple spaces
  no-multi-str: 2          // disallow use of multiline strings
  no-native-reassign: 2    // disallow reassignments of native objects
  no-new: 2                // disallow use of new operator when not part of the assignment or comparison
  no-new-func: 2           // disallow use of new operator for Function object
  no-new-wrappers: 2       // disallows creating new instances of String Number and Boolean
  no-octal: 2              // disallow use of octal literals
  no-octal-escape: 2       // disallow use of octal escape sequences in string literals such as var foo = Copyright \251;
  no-process-env: 2        // disallow use of process.env (off by default)
  no-proto: 2              // disallow usage of __proto__ property
  no-redeclare: 2          // disallow declaring the same variable more then once
  no-return-assign: 2      // disallow use of assignment in return statement
  no-script-url: 2         // disallow use of javascript: urls.
  no-self-compare: 2       // disallow comparisons where both sides are exactly the same (off by default)
  no-sequences: 2          // disallow use of comma operator
  no-unused-expressions: 2 // disallow usage of expressions in statement position
  no-void: 2               // disallow use of void operator (off by default)
  no-warning-comments: 2   // disallow usage of configurable warning terms in comments e.g. TODO or FIXME (off by default)
  no-with: 2               // disallow use of the with statement
  radix: 2                 // require use of the second argument for parseInt() (off by default)
  vars-on-top: 2           // requires to declare all vars on top of their containing scope (off by default)
  wrap-iife: 2             // require immediate function invocation to be wrapped in parentheses (off by default)
  yoda: 2                  // require or disallow Yoda conditions

env:
  es6: true
  browser: true
extends: 'eslint:recommended'
ecmaFeatures:
  jsx: true
  experimentalObjectRestSpread: true
  modules: true
plugins:
  - react
